install.packages("hockeyR")
verson$version.string
verson$version.string
version$version.string
install.packages("hockeyR")
?ggplot
??ggplot
library(dplyr)
package_df <- as.data.frame(installed.packages("/Library/Frameworks/R.framework/Versions/4.0/Resources/library"))
package_list <- as.character(package_df$Package)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
library(tidyverse)
install.packages("HockeyR")
version$version.string
devtools::install_github("danmorse314/hockeyR")
library(hockeyR)
pbp <- load_pbl(2021)
pbp <- load_pbp(2021)
pbp %>% select(event_type, event) %>% head(10)
names(pbp)
players <- pbp %>% summarize(
across(c(starts_with("home_on_"),
starts_with("away_on_"),
ends_with("_goalie")),
~list(unique(.x))))
x <- df %>% summarize(
across(c(starts_with("home_on_"),
starts_with("away_on_"),
ends_with("_goalie")),
~list(unique(.x)))
) %>%
unlist()
x <- pbp %>% summarize(
across(c(starts_with("home_on_"),
starts_with("away_on_"),
ends_with("_goalie")),
~list(unique(.x)))
) %>%
unlist()
x <- pbp %>% summarize(
across(c(starts_with("home_on_"),
starts_with("away_on_"),
ends_with("_goalie")),
~unique(.x))
) %>%
unlist()
x <- pbp %>% summarize(
across(c(starts_with("home_on_"),
starts_with("away_on_"),
ends_with("_goalie")),
~list(unique(.x)))
) %>%
unlist() %>% unique()
x <- pbp %>% summarize(
across(c(starts_with("home_on_"),
starts_with("away_on_"),
ends_with("_goalie")), ~unique(.x))
) %>%
unlist()
players
unlist(data.frame(list1 = list(5,4,3)))
data.frame(list1 = list(5,4,3))
data.frame(list1 = list(c(5,4,3)))
x= c(5,4,2)
data.frame(x=x)
x= list(x)
x
x = as.list(c(3,4,5))
x
y = as.list(c(5,6,7))
df <- data.frame(x,y)
df
list(5,2,1)
data.frame(x=list(5,2,1), y=list(2,3,1))
players
match.arg(c("combined", "off-def"), c("combined", "off-def"))
match.arg(c("combined", "off-def"), c("off-def"))
match.arg("combined", c("combined", "off-def"))
match.arg(c("combined", "off-def"), c("combined", "off-def"))
match.arg( "off-def", c("combined", "off-def"))
library(here)
library(glue)
library(tidyverse)
source(here("data", "utils.R"))
## Pull in data ---------------------------------------------------------------#
seasons <- c("2018", "2019", "2020", "2021")
method <- "off-def"
method <- match.arg(method, c("combined", "off-def"))
method
match.arg(c("combined", "off-def"), c("combined", "off-def"))
goals <- hockeyR::load_pbp(season)
goals <- hockeyR::load_pbp(seasons)
length(goals$event_type == "GOAL")
oals <- hockeyR::load_pbp(season) %>%
filter(event_type == "GOAL")
goals <- goals %>% filter(event_type == "GOAL")
seasons <- "2019"
fulldata <- hockeyR::load_pbp(seasons)
table(fulldata$event_type)
goals <- fulldata %>%
filter(event_type == "GOAL")
table(goals$strength_state)
table(goals$strength_code)
goals <- goals %>%
filter(
strength_state == "5v5",
strength_code %ni% c("PP", "SH"))
goals <- goals %>% filter(empty_net == "FALSE")
pre_filter_goals <- fulldata %>% filter(event_type="GOAL")
pre_filter_goals <- fulldata %>% filter(event_type=="GOAL")
5513+1858 + 776
table(pre_filter_goals$strength_code)
sum(is.na(pre_filter_goals$strength_code))
goals <- goals %>%
filter(
strength_state == "5v5",
strength_code %ni% c("PP", "SH"),
empty_net == "FALSE",
!is.na(away_goalie),
!is.na(home_goalie),
# !is.na(strength_code),
period <= 3
)
goals$description
goals$description[1]
goals$description[2]
goals$description[3]
goals <- goals %>%
select(
event_team_type,
starts_with("home_on_"),
starts_with("away_on_"),
home_goalie,
away_goalie,
home_abbreviation,
away_abbreviation
)
sparse_df_spec <- goals %>%
mutate(i = row_number()) %>%
transpose()
sparse_df_spec
str(sparse_df_spec)
head(sparse_df_spec)
View(sparse_df_spec)
paste0("home_on_", 1:5)
View(sparse_df_spec)
sparse_df_spec$1
sparse_df_spec[[1]]$event_team_type
typeof(sparse_df_spec[[1]]$event_team_type)
str(sparse_df_spec[[1]]$event_team_type)
unlist(sparse_df_spec[[1]]$event_team_type)
sparse_df_spec[[1]]["away_on_5"]
sparse_df_spec[[1]][["away_on_5"]]
row <- sparse_df_spec[[5]]
c(
"y", # y
row$home_abbreviation, row$away_abbreviation, # teams
row[home_cols], row[away_cols] # players
)
home_cols <- c(paste0("home_on_", 1:5), "home_goalie")
away_cols <- c(paste0("away_on_", 1:5), "away_goalie")
c(
"y", # y
row$home_abbreviation, row$away_abbreviation, # teams
row[home_cols], row[away_cols] # players
)
c(
"y", # y
row$home_abbreviation, row$away_abbreviation, # teams
row[home_cols], row[away_cols] # players
) %>% unlist()
c(
"y", # y
row$home_abbreviation, row$away_abbreviation, # teams
row[home_cols], row[away_cols] # players
) %>% unlist() %>% length()
values <- c(
ifelse(row$event_team_type == "home", 1, -1), # y
1, -1, # teams
rep(1, 6), rep(-1, 6) # players
)
values
cols <- unlist(c(
"y", # y
row$home_abbreviation, row$away_abbreviation, # teams
row[home_cols], row[away_cols] # players
))
cols
rows <- rep(i, length(cols))
rows <- rep(5, length(cols))
values
tibble(rows, cols, values)
def <- c(
rep(NA, 3), # y, teams
rep(values[1] == -1, 6), rep(values[1] == 1, 6) # players
)
cbind(tibble(rows, cols, values), def)
# Convert to data-frame for filling sparse matrix
sparse_df_from_row <- function(row) {
# For each goal, specify the row, column, and value to fill the sparse
# matrix according to the style of Gramacy et al. 2013.
# Columns will be "y", the teams involved, and the players involved.
i <- row$i
home_cols <- c(paste0("home_on_", 1:5), "home_goalie")
away_cols <- c(paste0("away_on_", 1:5), "away_goalie")
cols <- unlist(c(
"y", # y
row$home_abbreviation, row$away_abbreviation, # teams
row[home_cols], row[away_cols] # players
))
rows <- rep(i, length(cols))
values <- c(
ifelse(row$event_team_type == "home", 1, -1), # y
1, -1, # teams
rep(1, 6), rep(-1, 6) # players
)
# home team is on offense if values[1] == 1, defense otherwise
def <- c(
rep(NA, 3), # y, teams
rep(values[1] == -1, 6), rep(values[1] == 1, 6) # players
)
return(tibble(rows, cols, values, def))
}
sparse_df_spec <- goals %>%
mutate(i = row_number()) %>%
transpose() %>%
map(sparse_df_from_row)
View(sparse_df_spec)
sparse_df_spec %>% bind_rows
View(sparse_df_spec)
sparse_df_spec <- sparse_df_spec %>% bind_rows
players <- get_all_players(goals)
players %>% head()\
players %>% head()
col_names <- c("y", get_all_teams(goals), players)
View(sparse_df_spec)
sparse_df_spec <- sparse_df_spec %>%
mutate(col_ind = match(cols, col_names))
col_names
head(col_names, 35)
method <- match.arg("c", c("combined", "off-def"))
method
method <- match.arg("f", c("combined", "off-def"))
method <- match.arg(c("combined", "off-def"), c("combined", "off-def"))
method
method <- match.arg(c("combined", "off-def"), c("combined", "off-def"), several.ok = T)
method
method <- match(c("combined", "off-def"), c("combined", "off-def"), several.ok = T)
method <- match(c("combined", "off-def"), c("combined", "off-def"))
method
method <- match(c("combined", "off-def"), c("combined", "yo","off-def"))
method
match(c("combined", "of-def"), c("combined", "yo","off-def"))
sparse_df_spec <- sparse_df_spec %>%
mutate(across(col_ind, ~if_else(def, .x + length(players), .x, missing = .x)))
col_names <- c(col_names, players)
ep
Matrix::ep
mat <- Matrix::sparseMatrix(
sparse_df_spec$rows,
sparse_df_spec$col_ind,
x = sparse_df_spec$values
)
colnames(mat) <- col_names
mat
diff(mat@p) %>% head()
library(here)
library(glue)
library(tidyverse)
source(here("data", "utils.R"))
data_dir <- "data"
## Pull in data ---------------------------------------------------------------#
seasons <- c("2018", "2019", "2020", "2021")
method <- "off-def"
out <- build_model_data(seasons, method)
out
check_model_data(out)
X_play <- out[, 33:ncol(out)]
rowSums(X_play)
X_play
library(Matrix)
rowSums(X_play)
View(build_model_data)
?build_model_data
View(build_model_data)
check_model_data(out)
map_chr(seasons, ~ str_trunc(.x, width = 3, side = "left", ellipsis = "'"))
seasons, ~ str_trunc(.x, width = 3, side = "left")
map_chr(seasons, ~ str_trunc(.x, width = 3, side = "left"))
x <- "This string is moderately long"
rbind(
str_trunc(x, 20, "right"),
str_trunc(x, 20, "left"),
str_trunc(x, 20, "center")
)
map_chr(seasons, ~ str_trunc(.x, width = 5, side = "left"))
map_chr(seasons, ~ str_trunc(.x, width = 2, side = "left"))
map_chr(seasons, ~ str_trunc(.x, width = 6, side = "left"))
map_chr(seasons, ~ str_trunc(.x, width = 4, side = "left"))
seasons
map_chr(seasons, ~ str_trunc(.x, width = 3, side = "left"))
map_chr(seasons, ~ str_trunc(.x, width = 3, side = "left", ellipsis = "l"))
map_chr(seasons, ~ str_trunc(.x, width = 3, side = "left", ellipsis = "'"))
seasons_short <- map_chr(seasons, ~ str_trunc(.x, width = 3, side = "left", ellipsis = "'"))
seasons_short <- paste0(seasons_short)
seasons_short
seasons_short <- paste0(seasons_short, collapse = "")
seasons_short
today()
library(tidyverse)
today()
today
library(lubridate)
today
today()
fname = glue("model-data_s{seasons_short}_{method}_{today()}.rds")
fname
str(fname)
typeof(fname)
typeof(mat)
typeof(fulldata)
typeof(goals)
typeof(X_play)
typeof(build_longer_spec())
typeof(build_longer_spec
)
saveRDS(out, here(data_dir, fname))
library(hockeyR)
library(rstan)
`model-data_s'18'19'20'21_off-def_2022-02-22` <- readRDS("~/Documents/hockey-pm/data/model-data_s'18'19'20'21_off-def_2022-02-22.rds")
View(`model-data_s'18'19'20'21_off-def_2022-02-22`)
data <- `model-data_s'18'19'20'21_off-def_2022-02-22`
data$i
data[1]
data[2]
data[3]
data[["Dimname"]]
data[["Dimnames"]]
`model-data_s'18'19'20'21_off-def_2022-02-22`@Dimnames
`model-data_s'18'19'20'21_off-def_2022-02-22`@i[1:10]
`model-data_s'18'19'20'21_off-def_2022-02-22`@i[1:100]
`model-data_s'18'19'20'21_off-def_2022-02-22`@p[1:100]
`model-data_s'18'19'20'21_off-def_2022-02-22`@x
data[,1]
data[1:2,]
data[1:2,]
image(data)
print(image(data))
`model-data_s'18'19'20'21_off-def_2022-02-22`@i[18000:18100]
18903-17702
(18903-17702)/17702
1/15
data(amlxray, "faraway")
data(amlxray, package = "faraway")
?amlxray
library(faraway)
?amlxray
class(amlxray$CnRay)
class(amlxray$Fray)
class(amlxray$age)
amlxray
attr(amlxray$Mray)
getattr(amlxray$Mray)
str(amlxray$Mray)
attributes(amlxray$Mray)
attributes(amlxray$disease)
attributes(amlxray$age)
?barplot
data(galapagos, package="faraway")
data(gala, package="faraway")
summary(data)
summary(gala)
modp <- glm(Species ~ ., family=poisson, gala)
fitted(modp)[1:10]
plot(fitted(modp), (gala$Species-fitted(modp))^2)
plot(fitted(modp), (gala$Species-fitted(modp))^2, xlim=c(0,100), ylime=c(0,1000))
plot(fitted(modp), (gala$Species-fitted(modp))^2, xlim=c(0,100), ylim=c(0,1000))
plot(log(fitted(modp)), log((gala$Species-fitted(modp))^2))
abline(0m1)
abline(0,1)
plot(log(fitted(modp)), log((gala$Species-fitted(modp))^2), xlim=c(2.5,5.5), ylim=c(0,10))
abline(0,1)
sumary(modp)
library(faraway)
sumary(modp)
gala <- gala[,-2]
modp <- glm(Species ~ ., family=poisson, gala)
plot(fitted(modp), (gala$Species-fitted(modp))^2)
plot(fitted(modp), (gala$Species-fitted(modp))^2, xlim=c(0,100), ylim=c(0,1000))
abline(0,1)
curve(x^2, from=0, to=25, add=T)
curve(.8x^2, from=0, to=25, add=T)
curve(.8*x^2, from=0, to=25, add=T)
curve(.75*x^2, from=0, to=40, add=T)
curve(.65*x^2, from=0, to=40, add=T)
plot(log(fitted(modp)), log((gala$Species-fitted(modp))^2))
abline(0,1)
sqrt(31.749)
disp = sqrt(31.749)
-22.07/disp
data(dicentric, package="faraway")
xtabs(ca/cells ~ dseamt+doserate, dicentric)
xtabs(ca/cells ~ doseamt+doserate, dicentric)
xtabs(ca/cells ~ doseamt+doserate, dicentric)
with(dicentric, interaction.plot(doseamt, doserate, ca/cells))
dicentric$doserate
dicentric$doseamt
data(solder, package="faraway")
modp <- glm(skips ~ . , family=poisson, data=solder)
c(deviance(modp), df.residual(modp))
modp
summary(modp)
modp <- glm(skips ~  (Opening +Solder + Mask + PadType + Panel)^2 , family=poisson, data=solder)
c(deviance(modp), df.residual(modp))
pchisq(deviance(modp2),df.residual(modp2),lower=FALSE)
pchisq(deviance(modp),df.residual(modp),lower=FALSE)
plot(modp, 2)
plot(modp, 1)
plot(modp, 2)
plot(modp, 3)
plot(modp, 4)
plot(modp, 5)
plot(modp, 6)
negative.binomial(1)
poisson()
x=poisson()
x=negative.binomial(1)
library(MASS)
x=negative.binomial(1)
x
x$linkfun
x$linkinv
x$mu.eta
modn <- glm(skips ~ .,negative.binomial(1),solder)
modn
modp
modn <- glm(skips ~ .,negative.binomial(2),solder)
modn
library(pscl)
data("bioChemists")
View(bioChemists)
median(bioChemists$art)
summary(bioChemists$art)
table(bioChemists$art)
ocount <- table(bioChemists$art)[1:8]
modp <- glm(art ~ ., data=bioChemists, family=poisson)
predprod(modp)
predprob(modp)
X <- predprob(modp)
pcount <- colSums(predprob(modp)[,1:8])
cbind(pcount, ocount)
text(pcount,ocount, 0:7)
text(pcount,ocount, 0:7)
plot(count, ocount)
plot(pcount, ocount)
text(pcount,ocount, 0:7)
text(pcount,ocount, type="n")
plot(pcount, ocount, type="n")
text(pcount,ocount, type="n")
abline(0,1)
plot(pcount, ocount, type="n")
text(pcount,ocount,0:7)
abline(0,1)
?hurdle
modz <- zeroinfl(art ~ ., data=bioChemists)
fitted(modz)
sum(fitted(modz))
sum(bioChemists$art)
modp = glm(art~ ., family=poisson())
modp = glm(art~ ., family=poisson(), data=bioChemists)
sum(fitted(modp))
art$fem %>%head()
head(art$fem)
head(bioChemists$fem)
modz2 <- zeroinfl(art ~ fem+kid5+ment | ment, data=bioChemists)
newman <- data.frame(fem="Men",mar="Single",kid5=0,ment=seq(6, 15))
sumary(modz2)
library(faraway)
sumary(modz2)
summary(modz2)
predict(modz2, newdata=newman, type="prob")
expect = predict(modz2, newdata=newman, type="prob") %>% 0:19
expect = predict(modz2, newdata=newman, type="prob") %*% 0:19
expect
opred
ocount
table(bioChemists$art)/nrow(bioChemists)
table(bioChemists$art)/nrow(bioChemists) %*% 0:19
vector(table(bioChemists$art)/nrow(bioChemists)) %*% 0:19
vector(table(bioChemists$art)/nrow(bioChemists))
as.vector(table(bioChemists$art)/nrow(bioChemists))
as.vector(table(bioChemists$art)/nrow(bioChemists)) %*% 0:19
t(as.vector(table(bioChemists$art)/nrow(bioChemists))) %*% 0:19
t(as.vector(table(bioChemists$art)/nrow(bioChemists))) %*% c(0:12, 16, 19)
mean(bioChem$ment)
mean(bioChemists$ment)
.99^50
